"use strict";const Promise=require("bluebird"),urlBuilder=require("./urlBuilder");function scenes(e){this.connection=e}scenes.prototype.getAsync=function(){return this.connection.postAsync(urlBuilder.scenes,"get",null).then(e=>e.data)},scenes.prototype.runAsync=function(e){if(!e&&0!==e)return Promise.reject(new Error("Missing sceneId parameter."));switch(typeof e){case"number":return this.connection.postAsync(urlBuilder.scenes,"run",{id:e}).then(()=>Promise.resolve());case"string":return this.getAsync().then(r=>{let n=r.find(r=>r.name===e);return!n||!n.id&&0!==n.id?Promise.reject(new Error(`Scene "${e}" not found`)):this.connection.postAsync(urlBuilder.scenes,"run",{id:n.id}).then(()=>Promise.resolve())});default:return Promise.reject(new Error("Parameter sceneId must be of type number or string."))}},module.exports=scenes;